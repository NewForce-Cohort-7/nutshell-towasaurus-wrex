import { getChuckFact, setChuckFact } from "./dataAccess.js"
import { fetchRandomFact } from "./apiAccess.js"

// This is the function responsible for fetching a new Chuck Norris fact from the API and setting it in the application state
const generateFactButtonHandler = () => {
    fetchRandomFact().then(fact => setChuckFact(fact))
}

// Responsible for generating HTML code for a Chuck Norris fact
const generateChuckHTML = (chuckFact) => {
    return `
        <div id="chuckNorrisFact">
            <h2>Random Chuck Norris Fact</h2>
            <p>${chuckFact}</p>
            <button id="generateFact">Generate New Fact</button>
        </div>
    `
}

// Responsible for rendering the current Chuck Norris fact
const render = () => {
    const chuckFact = getChuckFact()
    const html = generateChuckHTML(chuckFact)
    document.querySelector("#chuckNorrisFact").innerHTML = html
}

// Responsible for generating HTML code for a Chuck Norris fact, without rendering it
export const createChuckHTML = () => {
    const chuckFact = getChuckFact()
    const html = generateChuckHTML(chuckFact)
    return html
}

// When the DOM is loaded, set the innerHTML of the #chuckNorrisFact element to the HTML generated by createChuckHTML()
document.addEventListener('DOMContentLoaded', () => {
    document.querySelector("#chuckNorrisFact").innerHTML = createChuckHTML()
})

// Add an event listener to the document that listens for clicks
document.addEventListener("click", event => {
    // If the clicked element has an id of "generateFact", call generateFactButtonHandler() to fetch a new fact and set it in the application state
    if (event.target.id === "generateFact") {
        generateFactButtonHandler()
    }
})


document.addEventListener("stateChanged", event => {
    render()
})
